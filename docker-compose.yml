version: '3.8'

services:
  # Main Reddit08 CRE Intelligence Platform application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: reddit08-cre-platform
    ports:
      - "8000:8000"
    environment:
      # Database configuration
      DATABASE_URL: "postgresql://user:password@postgres:5432/reddit08_db"
      
      # Redis configuration
      REDIS_URL: "redis://redis:6379/0"
      
      # API keys
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      REDDIT_CLIENT_ID: "${REDDIT_CLIENT_ID}"
      REDDIT_CLIENT_SECRET: "${REDDIT_CLIENT_SECRET}"
      NEWS_API_KEY: "${NEWS_API_KEY}"
      TWITTER_BEARER_TOKEN: "${TWITTER_BEARER_TOKEN}"
      
      # Application settings
      DEBUG: "false"
      LOG_LEVEL: "INFO"
      MAX_WORKERS: "4"
      
      # Data storage
      DATA_DIR: "/app/data"
      LOGS_DIR: "/app/logs"
      CONFIG_DIR: "/app/config"
      
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - postgres
      - redis
    networks:
      - reddit08-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: reddit08-postgres
    environment:
      POSTGRES_DB: reddit08_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - reddit08-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d reddit08_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: reddit08-redis
    volumes:
      - redis_data:/data
      - ./redis.conf:/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - reddit08-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: redis-server /etc/redis/redis.conf

  # Celery worker for background tasks
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reddit08-celery
    command: python -m celery -A src.mcp.fastapi_app.tasks worker --loglevel=info
    environment:
      # Database configuration
      DATABASE_URL: "postgresql://user:password@postgres:5432/reddit08_db"
      
      # Redis configuration
      REDIS_URL: "redis://redis:6379/0"
      
      # API keys
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      REDDIT_CLIENT_ID: "${REDDIT_CLIENT_ID}"
      REDDIT_CLIENT_SECRET: "${REDDIT_CLIENT_SECRET}"
      NEWS_API_KEY: "${NEWS_API_KEY}"
      TWITTER_BEARER_TOKEN: "${TWITTER_BEARER_TOKEN}"
      
      # Application settings
      DEBUG: "false"
      LOG_LEVEL: "INFO"
      DATA_DIR: "/app/data"
      LOGS_DIR: "/app/logs"
      
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - reddit08-network
    restart: unless-stopped

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reddit08-celery-beat
    command: python -m celery -A src.mcp.fastapi_app.tasks beat --loglevel=info
    environment:
      # Database configuration
      DATABASE_URL: "postgresql://user:password@postgres:5432/reddit08_db"
      
      # Redis configuration
      REDIS_URL: "redis://redis:6379/0"
      
      # API keys
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      REDDIT_CLIENT_ID: "${REDDIT_CLIENT_ID}"
      REDDIT_CLIENT_SECRET: "${REDDIT_CLIENT_SECRET}"
      NEWS_API_KEY: "${NEWS_API_KEY}"
      TWITTER_BEARER_TOKEN: "${TWITTER_BEARER_TOKEN}"
      
      # Application settings
      DEBUG: "false"
      LOG_LEVEL: "INFO"
      
    depends_on:
      - postgres
      - redis
    networks:
      - reddit08-network
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: reddit08-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - reddit08-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  reddit08-network:
    driver: bridge
